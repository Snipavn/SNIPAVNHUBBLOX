import os
import re
import time
import threading
import requests
import logging
import discord
import asyncio
from discord import app_commands
from discord.ext import commands
from dotenv import load_dotenv

# Load token t·ª´ .env
load_dotenv()
DISCORD_BOT_TOKEN = os.getenv("DISCORD_BOT_TOKEN")

# Thi·∫øt l·∫≠p logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s:%(levelname)s:%(name)s: %(message)s')
logger = logging.getLogger("discord_bot")

# Th√¥ng tin chi·∫øn d·ªãch
QUEST_INFO = {
    "m88": {
        "url": "https://bet88ec.com/cach-danh-bai-sam-loc",
        "traffic": "https://bet88ec.com/",
        "codexn": "taodeptrai"
    },
    "fb88": {
        "url": "https://fb88mg.com/ty-le-cuoc-hong-kong-la-gi",
        "traffic": "https://fb88mg.com/",
        "codexn": "taodeptrai"
    },
    "188bet": {
        "url": "https://88betag.com/cach-choi-game-bai-pok-deng",
        "traffic": "https://88betag.com/",
        "codexn": "taodeptrailamnhe"
    },
    "w88": {
        "url": "https://188.166.185.213/tim-hieu-khai-niem-3-bet-trong-poker-la-gi",
        "traffic": "https://188.166.185.213/",
        "codexn": "taodeptrai"
    },
    "v9bet": {
        "url": "https://v9betxa.com/cach-choi-craps",
        "traffic": "https://v9betxa.com/",
        "codexn": "taodeptrai"
    }
}

# K√™nh cho ph√©p s·ª≠ d·ª•ng l·ªánh
ALLOWED_CHANNEL_ID = 1393820443151962242  # ‚Üê Thay b·∫±ng ID k√™nh th·∫≠t c·ªßa b·∫°n

# Kh·ªüi t·∫°o bot
intents = discord.Intents.default()
bot = commands.Bot(command_prefix="!", intents=intents)

@bot.event
async def on_ready():
    logger.info(f'Bot ƒë√£ online!! {bot.user.name}#{bot.user.discriminator} (ID: {bot.user.id})')
    
    try:
        synced = await bot.tree.sync()
        logger.info(f'ƒê√£ ƒë·ªìng b·ªô l·ªánh: {len(synced)} l·ªánh ƒë√£ ƒë∆∞·ª£c ƒëƒÉng k√Ω.')
        for command in synced:
            logger.info(f' - {command.name}: {command.description}')
    except Exception as e:
        logger.error(f'L·ªói khi ƒë·ªìng b·ªô l·ªánh: {e}')
    
    await bot.change_presence(
        activity=discord.Game(name="Hiha nh∆∞ con c·∫∑c!"),
        status=discord.Status.idle
    )
    logger.info('Bot ƒë√£ s·∫µn s√†ng ƒë·ªÉ d√πng l·ªánh.')

# H√†m x·ª≠ l√Ω ƒë·∫øm ng∆∞·ª£c v√† g·ª≠i m√£
def process_yeumoney_step(interaction: discord.Interaction, message_id: int, code: str):
    for remaining in range(75, 0, -5):
        try:
            asyncio.run_coroutine_threadsafe(
                interaction.edit_original_response(
                    content=f"‚è≥ ƒêang x·ª≠ l√Ω... vui l√≤ng ch·ªù {remaining} gi√¢y."
                ),
                bot.loop
            )
        except Exception as e:
            logger.error(f"L·ªói khi c·∫≠p nh·∫≠t tin nh·∫Øn: {e}")
        time.sleep(5)

    asyncio.run_coroutine_threadsafe(
        interaction.edit_original_response(
            content=f"¬ª **M√£ c·ªßa b·∫°n l√†:**\n```{code}```\nüéâ H√£y nh·∫≠p m√£ ƒë·ªÉ anbatocom \nBot By [SNIPA VN](https://youtube.com/@snipavn205)."
        ),
        bot.loop
    )

# T·∫°o danh s√°ch Choice t·ª´ QUEST_INFO
choices_list = [
    app_commands.Choice(name=name, value=name)
    for name in QUEST_INFO.keys()
]

# Slash command
@bot.tree.command(name="bypass_yeumoney", description="Nh·∫≠p t·ª´ kho√° nh∆∞ 188bet,m88,v9net,fb88,w88 ƒë·ªÉ l·∫•y m√£")
@app_commands.describe(keyword="Ch·ªçn t·ª´ kho√° 188bet,m88,v9net,fb88,w88 ƒë·ªÉ l·∫•y m√£")
@app_commands.choices(keyword=choices_list)
async def bypass_yeumoney(interaction: discord.Interaction, keyword: app_commands.Choice[str]):
    if interaction.channel_id != ALLOWED_CHANNEL_ID:
        await interaction.response.send_message("‚ùå L·ªánh n√†y ch·ªâ ƒë∆∞·ª£c d√πng trong k√™nh <#1393820443151962242>.", ephemeral=True)
        return

    await interaction.response.defer(thinking=True)

    key = keyword.value
    info = QUEST_INFO.get(key)

    if not info:
        embed = discord.Embed(
            title="‚ùå Kh√¥ng th·ªÉ l·∫•y m√£!",
            description='T·ª´ kho√° kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠: 188bet, fb88, w88, v9bet...',
            color=discord.Color.red()
        )
        await interaction.followup.send(embed=embed, ephemeral=True)
        logger.warning(f"T·ª´ kho√° kh√¥ng h·ª£p l·ªá: {key}")
        return

    try:
        response = requests.post(
            "https://traffic-user.net/GET_MA.php",
            params={
                "codexn": info["codexn"],
                "url": info["url"],
                "loai_traffic": info["traffic"],
                "clk": 1000
            }
        )

        match = re.search(r'<span id="layma_me_vuatraffic"[^>]*>\s*(\d+)\s*</span>', response.text)
        if match:
            code = match.group(1)
            await interaction.followup.send(content="‚è≥ ƒêang x·ª≠ l√Ω... Vui l√≤ng ch·ªù!")
            threading.Thread(
                target=process_yeumoney_step,
                args=(interaction, interaction.id, code),
                daemon=True
            ).start()
        else:
            await interaction.followup.send("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y m√£.")
    except Exception as e:
        logger.error(f"L·ªói khi g·ª≠i y√™u c·∫ßu: {e}")
        await interaction.followup.send(f"‚ö†Ô∏è ƒê√£ x·∫£y ra l·ªói: {e}")

# Kh·ªüi ch·∫°y bot
if __name__ == "__main__":
    if DISCORD_BOT_TOKEN:
        try:
            bot.run(DISCORD_BOT_TOKEN)
        except Exception as e:
            logger.critical(f"Kh√¥ng th·ªÉ kh·ªüi ch·∫°y bot: {e}")
    else:
        logger.critical("Kh√¥ng t√¨m th·∫•y DISCORD_BOT_TOKEN trong .env")
